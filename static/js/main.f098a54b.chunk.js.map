{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","expand","onClickHandler","setState","event","this","props","className","summary","start","dateTime","timeZone","location","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","changeHandler","e","numberOfEvents","mockData","extractLocations","Set","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","a","encodeCode","encodeURIComponent","fetch","then","res","json","catch","error","access_token","localStorage","setItem","getEvents","NProgress","href","startsWith","done","getAccessToken","token","url","axios","get","result","data","JSON","stringify","checkToken","accessToken","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","eventCount","newEventArray","slice","Number","console","log","mounted","length","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f098a54b.chunk.js","sourcesContent":["// src/Event.js\n\nimport React, { Component } from \"react\";\n\nclass Event extends Component {\n\n  state = {\n   expand: false\n  }\n\n  onClickHandler = () => {\n    this.setState({\n      expand: !this.state.expand\n    });\n  }\n\n  render() {\n    const { event } = this.props;\n    const { expand } = this.state;\n\n    return (\n      <>\n       { !expand ?\n       <div> \n        <h1 className=\"event_title\">{event.summary}</h1>\n          <div className=\"event_description\">\n            {event.start.dateTime} ({event.start.timeZone}) <br />@{event.summary} | {event.location}\n            </div>\n        <button onClick={this.onClickHandler}>Show details</button>\n      </div>\n        :\n      <div>\n      <h1 className=\"event_title\">{event.summary}</h1>\n        <div className=\"event_description\">\n       {event.start.dateTime} ({event.start.timeZone}) <br />@{event.summary} | {event.location}\n       </div>\n        <h2>About Event:</h2>\n        <button onClick={this.onClickHandler}>Hide details</button>\n      </div>\n      }\n    </>\n      \n    )\n  }\n}\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n\n  render() {\n    const { events } = this.props;\n\n    return (\n      <ul className=\"EventList\">\n        {events.map(event =>\n        <li key={event.id}>\n          <Event event={event} />\n        </li>\n      )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({\n      query: value,\n      suggestions,\n    });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false\n    });\n  \n    this.props.updateEvents(suggestion, undefined);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n      <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n        {this.state.suggestions.map((suggestion) => (\n          <li\n            key={suggestion}\n            onClick={() => this.handleItemClicked(suggestion)}\n          >{suggestion}</li>\n      ))}\n          <li onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n      </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n\n\nchangeHandler = (e) => {\n  if (e.target.value === '') {\n    let countValue = 0;\n    this.props.updateEvents(undefined, 0)\n  } else {\n    this.props.updateEvents(undefined, e.target.value)\n  }\n };\n\n\n\n render() {\n\n const { numberOfEvents } = this.props;\n\n\n return (\n  <div>\n    <p>Number of Events: <input type=\"text\" value={numberOfEvents} onChange={(e)=> this.changeHandler(e)} /></p>\n  </div>\n )\n\n }\n\n};\n\nexport default NumberOfEvents;","const mockData = [\n  {\n   \"kind\": \"calendar#event\",\n   \"etag\": \"\\\"3181161784712000\\\"\",\n   \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n   \"status\": \"confirmed\",\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n   \"created\": \"2020-05-19T19:17:46.000Z\",\n   \"updated\": \"2020-05-27T12:01:32.356Z\",\n   \"summary\": \"Learn JavaScript\",\n   \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n   \"location\": \"London, UK\",\n   \"creator\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n   },\n   \"organizer\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n   },\n   \"start\": {\n    \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"end\": {\n    \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n   \"originalStartTime\": {\n    \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n   \"sequence\": 0,\n   \"reminders\": {\n    \"useDefault\": true\n   },\n   \"eventType\": \"default\"\n  },\n  {\n   \"kind\": \"calendar#event\",\n   \"etag\": \"\\\"3181159875584000\\\"\",\n   \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n   \"status\": \"confirmed\",\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n   \"created\": \"2020-05-19T19:14:30.000Z\",\n   \"updated\": \"2020-05-27T11:45:37.792Z\",\n   \"summary\": \"React is Fun\",\n   \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n   \"location\": \"Berlin, Germany\",\n   \"creator\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n   },\n   \"organizer\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n   },\n   \"start\": {\n    \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"end\": {\n    \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n   \"originalStartTime\": {\n    \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n   \"sequence\": 0,\n   \"reminders\": {\n    \"useDefault\": true\n   },\n   \"eventType\": \"default\"\n  } \n];\n\nexport { mockData };","/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\n import { mockData } from './mock-data';\n import axios from 'axios';\n import NProgress from 'nprogress';\n\n export const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://bmfwj8u9zd.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://bmfwj8u9zd.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://bmfwj8u9zd.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n\n}","// src/App.js\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations } from './api';\nimport './nprogress.css';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32\n  }\n\n  updateEvents = (location, eventCount) => {\n    if (eventCount === undefined) {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n        let newEventArray = locationEvents.slice(0, this.state.numberOfEvents);\n      this.setState({\n        events: newEventArray\n      });\n    });\n    }\n    else if (location === undefined) {\n      getEvents().then((events) => {\n        const locationEvents = (location === 'all') ?\n          events :\n          events.filter((event) => event.location === location);\n          let newEventArray = locationEvents.slice(0, Number(eventCount))\n        this.setState({\n          events: newEventArray,\n          numberOfEvents: Number(eventCount)\n        });\n        console.log(this.state)\n      });\n\n    }\n\n  }\n  \n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      events.length = this.state.numberOfEvents;\n      this.setState({ events, locations: extractLocations(events) });\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents numberOfEvents={this.state.numberOfEvents} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}